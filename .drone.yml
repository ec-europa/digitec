clone:
  git:
    image: plugins/git
    commands:
      - if  [ "${DRONE_BUILD_EVENT}" == "deployment" ] ; then
          echo "Skipping git init/clone :)";
        else
          git init;
          git remote add origin "${DRONE_REMOTE_URL}";
          git fetch --no-tags --depth 1 origin "${DRONE_COMMIT_REF}";
          if [ "${DRONE_BUILD_EVENT}" == "pull_request" ] || [ "${DRONE_BUILD_EVENT}" == "tag" ] ; then
            git checkout -qf FETCH_HEAD;
          else
            git reset --hard -q "${DRONE_COMMIT_SHA}";
          fi
        fi

pipeline:
  install:
    image: node:erbium
    commands:
      - yarn install --frozen-lockfile
    when:
      event: [push, pull_request, tag]

  test:
    image: node:erbium
    group: tests
    commands:
      - yarn test
    when:
      event: [push, pull_request]

  # Deploy a preview
  deploy-preview:
    image: node:erbium
    secrets: [gh_token, netlify_auth_token, netlify_site_id] 
    commands:
      - yarn clean
      - yarn build
      - yarn netlify deploy --site b68ede30-c5c4-4572-a606-f37d0e6b7ebb --message "Drone build: ${DRONE_BUILD_NUMBER}"
      - node scripts/set-pr-status.js
    when:
      event: [push, pull_request]      
      branch:
        exclude: [develop, master]
      status: [success, failure]

  # Deploy latest develop to digitec.netlify.com
  deploy-staging:
    image: node:erbium
    secrets: [gh_token, netlify_auth_token, netlify_site_id]
    commands:
      - yarn clean
      - yarn build
      - yarn netlify deploy --prod --site b68ede30-c5c4-4572-a606-f37d0e6b7ebb --message "Drone build: ${DRONE_BUILD_NUMBER}"
    when:
      branch: develop
      event: push      
      status: [success, failure]

  build-release:
    image: node:erbium
    commands:
      - yarn clean
      - yarn build:prefixed
      - echo "${DRONE_COMMIT_SHA}" > public/.commit
    when:
      event: [tag]

  package-release:
    group: packaging
    image: alpine:latest
    commands:
      - tar -czC public -f ${DRONE_REPO_NAME}-${DRONE_TAG}.tar.gz .
    when:
      event: [tag]
      
  push-release:
    image: plugins/github-release
    secrets: [github_release_api_key]
    files:
      - ${DRONE_REPO_NAME}-${DRONE_TAG}.tar.gz
    checksum:
      - md5
      - sha1
      - sha256
      - sha512
    when:
      event: [tag]
      
  create-deployment-event:
    image: fpfis/drone-plugin-github-deploy
    secrets: [github_api_token]
    state: create
    deploy_environment: production
    automerge: false
    when:
      event: [tag]
    
  download-release:
    image: instrumentisto/rsync-ssh
    commands:
      - wget https://github.com/ec-europa/digitec/releases/download/${DRONE_TAG}/${DRONE_REPO_NAME}-${DRONE_TAG}.tar.gz
      - wget https://github.com/ec-europa/digitec/releases/download/${DRONE_TAG}/sha1sum.txt
      - sha1sum -c sha1sum.txt
      - mkdir build
      - tar zxvf ${DRONE_REPO_NAME}-${DRONE_TAG}.tar.gz -C build
      - echo $(date +%s) > build/.timestamp
    when:
      event: deployment

  deploy-release:
    image: drillster/drone-rsync
    secrets: [rsync_key, MGMT_IP]
    hosts: [$MGMT_IP]
    user : fpfis
    source: ./build/
    target: /ec/local/home/fpfis/reference/php-clusters/multisite/production/cluster00/sources/static/digitec/2018
    script:
        - export GIT_FPFIS_AUTHOR="Drone ec.deploy.fpfis.eu"
        - cd /ec/local/home/fpfis/reference/php-clusters/multisite/production/cluster00/sources/static/digitec/2018
        - git add -A .
        - git commit -m"Deployed ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}@${DRONE_TAG} from drone build ${DRONE_BUILD_NUMBER}." .
        - git push 'nas-reference' 'master'
    when:
      event: deployment
